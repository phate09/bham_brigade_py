// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/heatmap.proto

public final class HeatmapOuterClass {
  private HeatmapOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HeatmapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Heatmap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 time = 1;</code>
     */
    int getTime();

    /**
     * <code>repeated int32 size = 2;</code>
     */
    java.util.List<java.lang.Integer> getSizeList();
    /**
     * <code>repeated int32 size = 2;</code>
     */
    int getSizeCount();
    /**
     * <code>repeated int32 size = 2;</code>
     */
    int getSize(int index);

    /**
     * <pre>
     *stores the map as a linear array that needs to be unpacked
     * </pre>
     *
     * <code>repeated double map = 3 [packed = true];</code>
     */
    java.util.List<java.lang.Double> getMapList();
    /**
     * <pre>
     *stores the map as a linear array that needs to be unpacked
     * </pre>
     *
     * <code>repeated double map = 3 [packed = true];</code>
     */
    int getMapCount();
    /**
     * <pre>
     *stores the map as a linear array that needs to be unpacked
     * </pre>
     *
     * <code>repeated double map = 3 [packed = true];</code>
     */
    double getMap(int index);

    /**
     * <code>uint32 max_lat = 4;</code>
     */
    int getMaxLat();

    /**
     * <code>uint32 max_long = 5;</code>
     */
    int getMaxLong();

    /**
     * <code>uint32 min_lat = 6;</code>
     */
    int getMinLat();

    /**
     * <code>uint32 min_long = 7;</code>
     */
    int getMinLong();
  }
  /**
   * <pre>
   *import "google/protobuf/timestamp.proto";
   * </pre>
   *
   * Protobuf type {@code Heatmap}
   */
  public  static final class Heatmap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Heatmap)
      HeatmapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Heatmap.newBuilder() to construct.
    private Heatmap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Heatmap() {
      time_ = 0;
      size_ = java.util.Collections.emptyList();
      map_ = java.util.Collections.emptyList();
      maxLat_ = 0;
      maxLong_ = 0;
      minLat_ = 0;
      minLong_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Heatmap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              time_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                size_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              size_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                size_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                size_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 25: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                map_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              map_.add(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                map_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                map_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {

              maxLat_ = input.readUInt32();
              break;
            }
            case 40: {

              maxLong_ = input.readUInt32();
              break;
            }
            case 48: {

              minLat_ = input.readUInt32();
              break;
            }
            case 56: {

              minLong_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          size_ = java.util.Collections.unmodifiableList(size_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          map_ = java.util.Collections.unmodifiableList(map_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return HeatmapOuterClass.internal_static_Heatmap_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return HeatmapOuterClass.internal_static_Heatmap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HeatmapOuterClass.Heatmap.class, HeatmapOuterClass.Heatmap.Builder.class);
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private int time_;
    /**
     * <code>uint32 time = 1;</code>
     */
    public int getTime() {
      return time_;
    }

    public static final int SIZE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> size_;
    /**
     * <code>repeated int32 size = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getSizeList() {
      return size_;
    }
    /**
     * <code>repeated int32 size = 2;</code>
     */
    public int getSizeCount() {
      return size_.size();
    }
    /**
     * <code>repeated int32 size = 2;</code>
     */
    public int getSize(int index) {
      return size_.get(index);
    }
    private int sizeMemoizedSerializedSize = -1;

    public static final int MAP_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> map_;
    /**
     * <pre>
     *stores the map as a linear array that needs to be unpacked
     * </pre>
     *
     * <code>repeated double map = 3 [packed = true];</code>
     */
    public java.util.List<java.lang.Double>
        getMapList() {
      return map_;
    }
    /**
     * <pre>
     *stores the map as a linear array that needs to be unpacked
     * </pre>
     *
     * <code>repeated double map = 3 [packed = true];</code>
     */
    public int getMapCount() {
      return map_.size();
    }
    /**
     * <pre>
     *stores the map as a linear array that needs to be unpacked
     * </pre>
     *
     * <code>repeated double map = 3 [packed = true];</code>
     */
    public double getMap(int index) {
      return map_.get(index);
    }
    private int mapMemoizedSerializedSize = -1;

    public static final int MAX_LAT_FIELD_NUMBER = 4;
    private int maxLat_;
    /**
     * <code>uint32 max_lat = 4;</code>
     */
    public int getMaxLat() {
      return maxLat_;
    }

    public static final int MAX_LONG_FIELD_NUMBER = 5;
    private int maxLong_;
    /**
     * <code>uint32 max_long = 5;</code>
     */
    public int getMaxLong() {
      return maxLong_;
    }

    public static final int MIN_LAT_FIELD_NUMBER = 6;
    private int minLat_;
    /**
     * <code>uint32 min_lat = 6;</code>
     */
    public int getMinLat() {
      return minLat_;
    }

    public static final int MIN_LONG_FIELD_NUMBER = 7;
    private int minLong_;
    /**
     * <code>uint32 min_long = 7;</code>
     */
    public int getMinLong() {
      return minLong_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (time_ != 0) {
        output.writeUInt32(1, time_);
      }
      if (getSizeList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(sizeMemoizedSerializedSize);
      }
      for (int i = 0; i < size_.size(); i++) {
        output.writeInt32NoTag(size_.get(i));
      }
      if (getMapList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(mapMemoizedSerializedSize);
      }
      for (int i = 0; i < map_.size(); i++) {
        output.writeDoubleNoTag(map_.get(i));
      }
      if (maxLat_ != 0) {
        output.writeUInt32(4, maxLat_);
      }
      if (maxLong_ != 0) {
        output.writeUInt32(5, maxLong_);
      }
      if (minLat_ != 0) {
        output.writeUInt32(6, minLat_);
      }
      if (minLong_ != 0) {
        output.writeUInt32(7, minLong_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, time_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < size_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(size_.get(i));
        }
        size += dataSize;
        if (!getSizeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        sizeMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getMapList().size();
        size += dataSize;
        if (!getMapList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        mapMemoizedSerializedSize = dataSize;
      }
      if (maxLat_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, maxLat_);
      }
      if (maxLong_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, maxLong_);
      }
      if (minLat_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, minLat_);
      }
      if (minLong_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, minLong_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof HeatmapOuterClass.Heatmap)) {
        return super.equals(obj);
      }
      HeatmapOuterClass.Heatmap other = (HeatmapOuterClass.Heatmap) obj;

      boolean result = true;
      result = result && (getTime()
          == other.getTime());
      result = result && getSizeList()
          .equals(other.getSizeList());
      result = result && getMapList()
          .equals(other.getMapList());
      result = result && (getMaxLat()
          == other.getMaxLat());
      result = result && (getMaxLong()
          == other.getMaxLong());
      result = result && (getMinLat()
          == other.getMinLat());
      result = result && (getMinLong()
          == other.getMinLong());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      if (getSizeCount() > 0) {
        hash = (37 * hash) + SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getSizeList().hashCode();
      }
      if (getMapCount() > 0) {
        hash = (37 * hash) + MAP_FIELD_NUMBER;
        hash = (53 * hash) + getMapList().hashCode();
      }
      hash = (37 * hash) + MAX_LAT_FIELD_NUMBER;
      hash = (53 * hash) + getMaxLat();
      hash = (37 * hash) + MAX_LONG_FIELD_NUMBER;
      hash = (53 * hash) + getMaxLong();
      hash = (37 * hash) + MIN_LAT_FIELD_NUMBER;
      hash = (53 * hash) + getMinLat();
      hash = (37 * hash) + MIN_LONG_FIELD_NUMBER;
      hash = (53 * hash) + getMinLong();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static HeatmapOuterClass.Heatmap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeatmapOuterClass.Heatmap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeatmapOuterClass.Heatmap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeatmapOuterClass.Heatmap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeatmapOuterClass.Heatmap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeatmapOuterClass.Heatmap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeatmapOuterClass.Heatmap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HeatmapOuterClass.Heatmap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static HeatmapOuterClass.Heatmap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static HeatmapOuterClass.Heatmap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static HeatmapOuterClass.Heatmap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HeatmapOuterClass.Heatmap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HeatmapOuterClass.Heatmap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *import "google/protobuf/timestamp.proto";
     * </pre>
     *
     * Protobuf type {@code Heatmap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Heatmap)
        HeatmapOuterClass.HeatmapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return HeatmapOuterClass.internal_static_Heatmap_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return HeatmapOuterClass.internal_static_Heatmap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HeatmapOuterClass.Heatmap.class, HeatmapOuterClass.Heatmap.Builder.class);
      }

      // Construct using HeatmapOuterClass.Heatmap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        time_ = 0;

        size_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        map_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        maxLat_ = 0;

        maxLong_ = 0;

        minLat_ = 0;

        minLong_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return HeatmapOuterClass.internal_static_Heatmap_descriptor;
      }

      @java.lang.Override
      public HeatmapOuterClass.Heatmap getDefaultInstanceForType() {
        return HeatmapOuterClass.Heatmap.getDefaultInstance();
      }

      @java.lang.Override
      public HeatmapOuterClass.Heatmap build() {
        HeatmapOuterClass.Heatmap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public HeatmapOuterClass.Heatmap buildPartial() {
        HeatmapOuterClass.Heatmap result = new HeatmapOuterClass.Heatmap(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.time_ = time_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size_ = java.util.Collections.unmodifiableList(size_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.size_ = size_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          map_ = java.util.Collections.unmodifiableList(map_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.map_ = map_;
        result.maxLat_ = maxLat_;
        result.maxLong_ = maxLong_;
        result.minLat_ = minLat_;
        result.minLong_ = minLong_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HeatmapOuterClass.Heatmap) {
          return mergeFrom((HeatmapOuterClass.Heatmap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HeatmapOuterClass.Heatmap other) {
        if (other == HeatmapOuterClass.Heatmap.getDefaultInstance()) return this;
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        if (!other.size_.isEmpty()) {
          if (size_.isEmpty()) {
            size_ = other.size_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSizeIsMutable();
            size_.addAll(other.size_);
          }
          onChanged();
        }
        if (!other.map_.isEmpty()) {
          if (map_.isEmpty()) {
            map_ = other.map_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureMapIsMutable();
            map_.addAll(other.map_);
          }
          onChanged();
        }
        if (other.getMaxLat() != 0) {
          setMaxLat(other.getMaxLat());
        }
        if (other.getMaxLong() != 0) {
          setMaxLong(other.getMaxLong());
        }
        if (other.getMinLat() != 0) {
          setMinLat(other.getMinLat());
        }
        if (other.getMinLong() != 0) {
          setMinLong(other.getMinLong());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HeatmapOuterClass.Heatmap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HeatmapOuterClass.Heatmap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int time_ ;
      /**
       * <code>uint32 time = 1;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <code>uint32 time = 1;</code>
       */
      public Builder setTime(int value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 time = 1;</code>
       */
      public Builder clearTime() {
        
        time_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> size_ = java.util.Collections.emptyList();
      private void ensureSizeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          size_ = new java.util.ArrayList<java.lang.Integer>(size_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 size = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getSizeList() {
        return java.util.Collections.unmodifiableList(size_);
      }
      /**
       * <code>repeated int32 size = 2;</code>
       */
      public int getSizeCount() {
        return size_.size();
      }
      /**
       * <code>repeated int32 size = 2;</code>
       */
      public int getSize(int index) {
        return size_.get(index);
      }
      /**
       * <code>repeated int32 size = 2;</code>
       */
      public Builder setSize(
          int index, int value) {
        ensureSizeIsMutable();
        size_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 size = 2;</code>
       */
      public Builder addSize(int value) {
        ensureSizeIsMutable();
        size_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 size = 2;</code>
       */
      public Builder addAllSize(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSizeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, size_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 size = 2;</code>
       */
      public Builder clearSize() {
        size_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> map_ = java.util.Collections.emptyList();
      private void ensureMapIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          map_ = new java.util.ArrayList<java.lang.Double>(map_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *stores the map as a linear array that needs to be unpacked
       * </pre>
       *
       * <code>repeated double map = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getMapList() {
        return java.util.Collections.unmodifiableList(map_);
      }
      /**
       * <pre>
       *stores the map as a linear array that needs to be unpacked
       * </pre>
       *
       * <code>repeated double map = 3 [packed = true];</code>
       */
      public int getMapCount() {
        return map_.size();
      }
      /**
       * <pre>
       *stores the map as a linear array that needs to be unpacked
       * </pre>
       *
       * <code>repeated double map = 3 [packed = true];</code>
       */
      public double getMap(int index) {
        return map_.get(index);
      }
      /**
       * <pre>
       *stores the map as a linear array that needs to be unpacked
       * </pre>
       *
       * <code>repeated double map = 3 [packed = true];</code>
       */
      public Builder setMap(
          int index, double value) {
        ensureMapIsMutable();
        map_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *stores the map as a linear array that needs to be unpacked
       * </pre>
       *
       * <code>repeated double map = 3 [packed = true];</code>
       */
      public Builder addMap(double value) {
        ensureMapIsMutable();
        map_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *stores the map as a linear array that needs to be unpacked
       * </pre>
       *
       * <code>repeated double map = 3 [packed = true];</code>
       */
      public Builder addAllMap(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureMapIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, map_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *stores the map as a linear array that needs to be unpacked
       * </pre>
       *
       * <code>repeated double map = 3 [packed = true];</code>
       */
      public Builder clearMap() {
        map_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int maxLat_ ;
      /**
       * <code>uint32 max_lat = 4;</code>
       */
      public int getMaxLat() {
        return maxLat_;
      }
      /**
       * <code>uint32 max_lat = 4;</code>
       */
      public Builder setMaxLat(int value) {
        
        maxLat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 max_lat = 4;</code>
       */
      public Builder clearMaxLat() {
        
        maxLat_ = 0;
        onChanged();
        return this;
      }

      private int maxLong_ ;
      /**
       * <code>uint32 max_long = 5;</code>
       */
      public int getMaxLong() {
        return maxLong_;
      }
      /**
       * <code>uint32 max_long = 5;</code>
       */
      public Builder setMaxLong(int value) {
        
        maxLong_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 max_long = 5;</code>
       */
      public Builder clearMaxLong() {
        
        maxLong_ = 0;
        onChanged();
        return this;
      }

      private int minLat_ ;
      /**
       * <code>uint32 min_lat = 6;</code>
       */
      public int getMinLat() {
        return minLat_;
      }
      /**
       * <code>uint32 min_lat = 6;</code>
       */
      public Builder setMinLat(int value) {
        
        minLat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 min_lat = 6;</code>
       */
      public Builder clearMinLat() {
        
        minLat_ = 0;
        onChanged();
        return this;
      }

      private int minLong_ ;
      /**
       * <code>uint32 min_long = 7;</code>
       */
      public int getMinLong() {
        return minLong_;
      }
      /**
       * <code>uint32 min_long = 7;</code>
       */
      public Builder setMinLong(int value) {
        
        minLong_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 min_long = 7;</code>
       */
      public Builder clearMinLong() {
        
        minLong_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Heatmap)
    }

    // @@protoc_insertion_point(class_scope:Heatmap)
    private static final HeatmapOuterClass.Heatmap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HeatmapOuterClass.Heatmap();
    }

    public static HeatmapOuterClass.Heatmap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Heatmap>
        PARSER = new com.google.protobuf.AbstractParser<Heatmap>() {
      @java.lang.Override
      public Heatmap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Heatmap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Heatmap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Heatmap> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public HeatmapOuterClass.Heatmap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Heatmap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Heatmap_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026protobuf/heatmap.proto\"|\n\007Heatmap\022\014\n\004t" +
      "ime\030\001 \001(\r\022\014\n\004size\030\002 \003(\005\022\017\n\003map\030\003 \003(\001B\002\020\001" +
      "\022\017\n\007max_lat\030\004 \001(\r\022\020\n\010max_long\030\005 \001(\r\022\017\n\007m" +
      "in_lat\030\006 \001(\r\022\020\n\010min_long\030\007 \001(\rb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Heatmap_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Heatmap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Heatmap_descriptor,
        new java.lang.String[] { "Time", "Size", "Map", "MaxLat", "MaxLong", "MinLat", "MinLong", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
